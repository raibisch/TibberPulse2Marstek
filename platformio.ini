; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
#default_envs  = lolin-s2-mini
#default_envs = esp32-s3-zero
default_envs = esp32
#default_envs = m5-coreink
#default_envs = heltec_wifi_kit_8

## muss hier stehen !! ...nicht bei 'xxxx_envs' !!
##lib_dir = ${PROJECT_DIR}/../mylibs
# ${PROJECT_DIR}/../mylibs/SmartGrid
# ${PROJECT_DIR}/../mylibs/XPString
# ${PROJECT_DIR}/../mylibs/AsyncWebLog
# ${PROJECT_DIR}/../mylibs/AsyncWebOTA
# ${PROJECT_DIR}/../mylibs/FileVarStore
# ${PROJECT_DIR}/../mylibs/ESP32ntp
# ${PROJECT_DIR}/../mylibs/LuxWebsocket
# new:
# ${PROJECT_DIR}/../mylibs/AsyncWebApp


[common]
lib_deps_common =
	#https://github.com/ESP32Async/ESPAsyncWebServer
	#ESP32Async/ESPAsyncWebServer
	# smaller:
	#https://github.com/me-no-dev/ESPAsyncWebServer 
    #not tested:
    #esp32async/ESPAsyncWebServer@^3.7.1
	ESP32Async/ESPAsyncWebServer@ 3.6.0
   
    #https://github.com/bblanchon/ArduinoJson
    bblanchon/ArduinoJson@^7.3.0

lib_dir_common =
    ${PROJECT_DIR}/lib


build_flags =
    -DDEBUG_PRINT=1
    -DWEB_APP=1
    -DSML_TIBBER=1
    -DEM1_UDP_SIMULATION=1
    -DMARSTEK_API=1
    ## not implemented now:
    #-DMQTT_ENABLE=1

[env:esp32-s3-zero]
# platform = espressif32 --> no SPIFFS support !!
platform = https://github.com/platformio/platform-espressif32.git  
board = esp32-s3-fh4r2
framework = arduino
monitor_speed = 115200

board_upload.use_1200bps_touch = yes
board_upload.wait_for_upload_port = yes
board_upload.require_upload_port = yes
build_unflags = -DARDUINO_USB_MODE=1
build_flags = 
     ${common.build_flags}
    -DARDUINO_USB_MODE=0
	-DARDUINO_USB_CDC_ON_BOOT=1
	-DESP32_S3_ZERO=1
lib_deps =${common.lib_deps_common}	
extra_scripts = post_build.py

[env:lolin-s2-mini]
# platform = espressif32 --> no SPIFFS support !!
platform = https://github.com/platformio/platform-espressif32.git  
board = lolin_s2_mini
framework = arduino
monitor_speed = 115200
board_upload.use_1200bps_touch = yes
board_upload.wait_for_upload_port = yes
board_upload.require_upload_port = yes
build_unflags = -DARDUINO_USB_MODE=1
build_flags =
    ${common.build_flags}
	-DARDUINO_USB_MODE=0
	-DARDUINO_USB_CDC_ON_BOOT=1
	-DESP32_S2_MINI=1
lib_deps =
	${common.lib_deps_common}
extra_scripts = post_build.py
 
[env:esp32]
# platform = espressif32 --> no SPIFFS support !!
platform = https://github.com/platformio/platform-espressif32.git 
#platform = espressif32 @ 6.0.1
board = esp32dev
framework = arduino
monitor_speed = 115200
build_flags = 
    ${common.build_flags}
    -DESP32_DEVKIT1=1
    # define for MINI_32 becaue of brownout problem
    -DMINI_32=1
lib_deps =
	${common.lib_deps_common}
extra_scripts = post_build.py

[env:m5-coreink]
platform = espressif32
board = m5stack-core-esp32
framework = arduino
monitor_speed = 115200
build_flags =
    ${common.build_flags}
    -DM5_COREINK=1
lib_deps =
    https://github.com/m5stack/M5Core-Ink.git
    https://github.com/m5stack/M5GFX.git
    ${common.lib_deps_common}
extra_scripts = post_build.py


[env:heltec_wifi_kit_8]
#platform = espressif8266
platform = https://github.com/platformio/platform-espressif8266 @ 4.2.1
board = heltec_wifi_kit_8
framework = arduino
monitor_speed = 115200
build_flags = 
     ${common.build_flags}
     -DWEB_APP=1
     -DLED_GPIO=-1
     -DDISPLAY_OLED=1
     #-DDEBUG_ESP_PORT=Serial
	 #-DDEBUG_ESP_CORE=1
	 #-DCORE_DEBUG_LEVEL=3

lib_deps =
 	U8g2
    ESP32Async/ESPAsyncWebServer@ 3.6.0
    bblanchon/ArduinoJson@7.3.0
extra_scripts = post_build.py
########################################


 








	
